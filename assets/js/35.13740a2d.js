(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{605:function(t,e,n){"use strict";n.r(e);var a=n(35),l=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"tform表单组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tform表单组件"}},[t._v("#")]),t._v(" TForm表单组件")]),t._v(" "),n("hr"),t._v(" "),n("common-code-format",{attrs:{description:""}},[n("docsComponents-TForm-index"),t._v(" "),n("highlight-code",{attrs:{slot:"codeText"},slot:"codeText"},[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("<template>\n    <div class=\"form-data\">\n      <t-form\n        :ref-obj.sync=\"formInfo.ref\"\n        :form-data=\"formInfo.formData\"\n        :field-list=\"formInfo.fieldList\"\n        :rules=\"formInfo.rules\"\n        :operator-list=\"formInfo.operatorList\"\n        :list-type-info=\"listTypeInfo\"\n        @handleClick=\"handleClick\"\n        @handleEvent=\"handleEvent\"\n      >\n        \x3c!-- 自定义插槽-选择头像 --\x3e\n        <template #form-avatar>\n          <div\n            class=\"slot-avatar\"\n            v-for=\"checkedItem in uploadFile.checkedList\"\n            :key=\"checkedItem.type\"\n          >\n            <t-upload-file\n              :attachmentType=\"checkedItem.type\"\n              @uploadSuccess=\"pushUploadItem\"\n              @deleteSuccess=\"pushUploadItem\"\n            />\n          </div>\n        </template>\n      </t-form>\n    </div>\n</template>\n<script>\n    export default {\n        data () {\n          const isEmail = (rule, value, callback) => {\n            const reg = /^([a-z0-9A-Z]+[-|._]?)+[a-z0-9A-Z]@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\\.)+[a-zA-Z]{2,}$/\n            if (!reg.test(value)) {\n              callback(new Error('请输入正确格式的邮箱'))\n            } else {\n              callback()\n            }\n          }\n          return {\n            // uploadFile上传图片\n            uploadFile: {\n              fmFileList: [],\n              uploadObj: {},\n              checkedList: [\n                {\n                  check: true,\n                  type: '001'\n                }\n              ]\n            },\n            // form表单\n            formInfo: {\n              ref: null,\n              formData: {\n                id: '', // *唯一ID\n                account: '', // *用户账号\n                password: '', // *用户密码\n                name: '', // *用户昵称\n                type: '', // *用户类型: 0: 手机注册 1: 论坛注册 2: 管理平台添加\n                sex: '', // *性别: 0:男 1:女\n                hobby: [], // *爱好: 0:男 1:女\n                avatar: '', // 头像\n                phone: '', // 手机号码\n                createDate: '', // 创建时间\n                startDate: '', // 开始日期\n                endDate: '', // 结束日期\n                wechat: '', // 微信\n                qq: '', // qq\n                email: '', // 邮箱\n                desc: '', // 描述\n                status: '' // *状态: 0：停用，1：启用(默认为1)',\n              },\n              fieldList: [\n                { label: '账号', value: 'account', type: 'input', event: 'account' },\n                { label: '密码', value: 'password', type: 'password' },\n                { label: '昵称', value: 'name', type: 'input' },\n                { label: '性别', value: 'sex', type: 'select', list: 'sexList' },\n                { label: '爱好', value: 'hobby', type: 'checkbox', list: 'hobbyList', event: 'checkbox' },\n                { label: '头像', value: 'avatar', type: 'slot' },\n                { label: '手机号码', value: 'phone', type: 'input' },\n                { label: '创建时间', value: 'createDate', type: 'date', event: 'date' },\n                { label: '时间范围', startDate: 'startDate', endDate: 'endDate', type: 't-date', event: 'date' },\n                { label: '微信', value: 'wechat', type: 'input' },\n                { label: 'QQ', value: 'qq', type: 'input' },\n                { label: '邮箱', value: 'email', type: 'input', rules: [{ required: true, message: '邮箱不能为空！' }, { validator: isEmail }] },\n                { label: '描述', value: 'desc', type: 'textarea' },\n                { label: '状态', value: 'status', type: 'select', list: 'statusList' }\n              ],\n              rules: {\n                account: [\n                  { required: true, message: '请输入账号', trigger: 'blur' },\n                  { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\n                ],\n                password: [\n                  { required: true, message: '请输入密码', trigger: 'blur' }\n                ],\n                name: [\n                  { required: true, message: '请输入昵称', trigger: 'blur' }\n                ],\n                phone: [\n                  { required: true, message: '请输入手机号码', trigger: 'blur' }\n                ],\n                sex: [\n                  { required: true, message: '请选择性别', trigger: 'change' }\n                ],\n                hobby: [\n                  { type: 'array', required: true, message: '请至少选择一个爱好', trigger: 'change' }\n                ]\n              },\n              operatorList: [\n                { label: '提交', type: 'danger', fun: this.submitForm },\n                { label: '重置', type: 'primary', fun: this.resetForm }\n              ]\n            },\n            // 相关列表\n            listTypeInfo: {\n              hobbyList: [\n                { label: '吉他', value: '0' },\n                { label: '看书', value: '1' },\n                { label: '美剧', value: '2' },\n                { label: '旅游', value: '3' },\n                { label: '音乐', value: '4' }\n              ],\n              sexList: [\n                { key: '女', value: 1 },\n                { key: '男', value: 0 }\n              ],\n              accountTypeList: [\n                { key: '手机用户', value: 0 },\n                { key: '论坛用户', value: 1 },\n                { key: '平台用户', value: 2 }\n              ],\n              statusList: [\n                { key: '启用', value: 1 },\n                { key: '停用', value: 0 }\n              ]\n            }\n          }\n        },\n        // 方法\n        methods: {\n          // 上传头像\n          pushUploadItem (val, attachmentType) {\n            console.log(val, attachmentType)\n            let attachmentNo = val.res\n            this.uploadFile.uploadObj[attachmentType] = attachmentNo\n            if (!this.uploadFile.uploadObj[attachmentType] || this.uploadFile.uploadObj[attachmentType].length === 0) {\n              delete this.uploadFile.uploadObj[attachmentType]\n            }\n            let tempFileList = []\n            for (let key of Object.keys(this.uploadFile.uploadObj)) {\n              let uploadListItem = {\n                attachmentNo: this.uploadFile.uploadObj[key],\n                attachmentType: key\n              }\n              tempFileList.push(uploadListItem)\n            }\n            this.uploadFile.fmFileList = tempFileList\n          },\n          // 触发事件\n          handleEvent (type, val, key) {\n            switch (type) {\n              // 日期显示\n              case 'date':\n                console.log(1111111, val, type, key)\n                this.formInfo.formData[key] = val\n                break\n              case 'checkbox':\n                console.log(2222, val, type, key)\n                break\n            }\n          },\n          // 提交form表单\n          submitForm () {\n            this.formInfo.ref.validate((valid) => {\n              console.log(88, valid)\n              if (!valid) return\n              console.log(77, this.formInfo.formData)\n            })\n          },\n          // 重置form表单\n          resetForm () {\n            Object.assign(this.$data.formInfo.formData, this.$options.data().formInfo.formData)\n          }\n        }\n    }\n<\/script>\n")])])])])],1),t._v(" "),n("h1",{attrs:{id:"tform-参数配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tform-参数配置"}},[t._v("#")]),t._v(" TForm 参数配置")]),t._v(" "),n("h3",{attrs:{id:"_1-简介：基于elementui-form表单组件的二次封装，着重于数据层面，html一行代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介：基于elementui-form表单组件的二次封装，着重于数据层面，html一行代码"}},[t._v("#")]),t._v(" 1. 简介：基于ElementUI Form表单组件的二次封装，着重于数据层面，HTML一行代码")]),t._v(" "),n("p",[t._v("Form表单组件\n"),n("strong",[t._v("代码示例：")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('     <t-form\n      :ref-obj.sync="formInfo.ref"\n      :form-data="formInfo.formData"\n      :field-list="formInfo.fieldList"\n      :rules="formInfo.rules"\n      :operator-list="formInfo.operatorList"\n      :label-width="formInfo.labelWidth"\n      :list-type-info="listTypeInfo"\n      @handleEvent="handleEvent"\n    >\n      \x3c!-- 自定义插槽-选择头像 --\x3e\n      <template #form-avatar>\n        <div\n          class="slot-avatar"\n          v-for="checkedItem in uploadFile.checkedList"\n          :key="checkedItem.type"\n        >\n          <t-upload-file\n            :attachmentType="checkedItem.type"\n            @uploadSuccess="pushUploadItem"\n            @deleteSuccess="pushUploadItem"\n          />\n        </div>\n      </template>\n    </t-form>\n    //注意:ref-obj(form校验规则相当于ref)必须要‘.sync’修饰符\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br")])]),n("h3",{attrs:{id:"_2-events"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-events"}},[t._v("#")]),t._v(" 2. events")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("事件名")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("说明")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("返回值")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("handleEvent")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("单个查询条件触发事件")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("fieldList中type/查询条件输入的值/fieldList中event值")])])])]),t._v(" "),n("h3",{attrs:{id:"_3-配置参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置参数"}},[t._v("#")]),t._v(" 3. 配置参数")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("参数")]),t._v(" "),n("th",[t._v("说明")]),t._v(" "),n("th",[t._v("类型")]),t._v(" "),n("th",[t._v("是否必须")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("refObj")]),t._v(" "),n("td",[t._v("form表单校验规则方法 （可以参考elementUI Form表单方法中的validate）")]),t._v(" "),n("td",[t._v("obj")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("className")]),t._v(" "),n("td",[t._v("自定义类名")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("listTypeInfo")]),t._v(" "),n("td",[t._v("下拉选择数据源（type:'select'有效）")]),t._v(" "),n("td",[t._v("Object")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("fieldList")]),t._v(" "),n("td",[t._v("form表单每项list")]),t._v(" "),n("td",[t._v("Array")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("---type")]),t._v(" "),n("td",[t._v("form表单每一项类型（若值为slot——新增自定义插槽form-'value')")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("---label")]),t._v(" "),n("td",[t._v("form表单每一项title")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("---value")]),t._v(" "),n("td",[t._v("form表单每一项传给后台的参数")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("---startDate")]),t._v(" "),n("td",[t._v("仅仅针对（type:'t-date'有效）与 endDate同时使用")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("---endDate")]),t._v(" "),n("td",[t._v("仅仅针对（type:'t-date'有效）选择开始——结束日期")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("---plusTime")]),t._v(" "),n("td",[t._v("仅仅针对（type:'t-date'有效）是否带后缀时分秒")]),t._v(" "),n("td",[t._v("Boolean")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("---valueFormat")]),t._v(" "),n("td",[t._v("type为date/t-date 日期返回值格式")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("---rules")]),t._v(" "),n("td",[t._v("每一项输入框的表单校验规则")]),t._v(" "),n("td",[t._v("Object/Array")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("---list")]),t._v(" "),n("td",[t._v("下拉选择数据源（仅仅对type:'select'有效）")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("---event")]),t._v(" "),n("td",[t._v("每个输入框事件标志")]),t._v(" "),n("td",[t._v("Array")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("formData")]),t._v(" "),n("td",[t._v("参数")]),t._v(" "),n("td",[t._v("Object")]),t._v(" "),n("td",[t._v("是")])]),t._v(" "),n("tr",[n("td",[t._v("labelWidth")]),t._v(" "),n("td",[t._v("label宽度")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("rules")]),t._v(" "),n("td",[t._v("规则（可依据elementUI配置）")]),t._v(" "),n("td",[t._v("Object/Array")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("operatorList")]),t._v(" "),n("td",[t._v("操作按钮list")]),t._v(" "),n("td",[t._v("Array")]),t._v(" "),n("td",[t._v("否")])]),t._v(" "),n("tr",[n("td",[t._v("isOperator")]),t._v(" "),n("td",[t._v("是否显示操作按钮")]),t._v(" "),n("td",[t._v("Boolean")]),t._v(" "),n("td",[t._v("否")])])])]),t._v(" "),n("h3",{attrs:{id:"_4-关于element-ui-el-form提供的一些方法-属性可直接使用，无需其他配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-关于element-ui-el-form提供的一些方法-属性可直接使用，无需其他配置"}},[t._v("#")]),t._v(" 4. 关于element-ui el-form提供的一些方法/属性可直接使用，无需其他配置")])],1)}),[],!1,null,null,null);e.default=l.exports}}]);